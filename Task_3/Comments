Challenges Faced:

1) Packages - Make sure your compiled classes are within a package.

2) I / O - The process of getting inputs and printing the outputs should be inside the Runner class only!!!

3) Task methods - The methods for tasks given should in another class such that it receives the arguments and returns the required output to the Runner class.

4) NamingConvention - The names being provided should be meaningful & shouldn't be a single char [except iterator of for-loop];

5) Method Content - Every method should be as short as possible. Particularly Main method should have only less contents and the other contents can be comprised as other methods.

6) Object Creation - Try to avoid creating unecessary objects. [Eg : If you call many methods from main method and all of them needed scanner object just pass it as parameter.]

7) Hard Coding - Avoid Hard Coding [The way of specifying values within methods using "..."]. Try assigning it to a variable from Runner and use it.

8) Code Logic - Try the best you can to make the logic more general so that no need for modification / rewrite of code. 
		[Eg : If a code is requested for accessing 2 char of a String, make it general by getting the number of character too, So that your code can work for any numbers.]
		
9) Access Specifiers - Always make the method private while creating so that the access can be specified based on its need. This will help practicing the use of access specifiers.

10) Validation - Write validation for the needed. No need to write them individual for every methods distinctly. Validation should be general for all method needs.

11) Explore the classes - Don't forget to explore all the in-built methods before writing your own logic for your methods. 

12) Trust your Code - In case if there is any need of your code [previously written code by U] within your program, you should use it instead of in-built code.

13) Exception Handling - Should use custom exception for all the performed validation. 

14) Exception Propagation - Mainly, Exception should be thrown to the Runner or the User Environment. 
			It's better to not hide the exception handled & also, For the client side should not uncover the exact error.
		
15) Curly Phrases {} - Practice using the '{' & '}' while writing if-statements & for-loop, so that anyone can avoid unwanted errors may be caused by them.

